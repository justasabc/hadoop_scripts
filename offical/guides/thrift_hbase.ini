#http://thrift.apache.org/download/

#=======================================
# Step 1: Download Apache Thrift
#=======================================

# http://www.apache.org/dyn/closer.cgi?path=/thrift/0.9.1/thrift-0.9.1.tar.gz
cd ./offical/tar/
wget http://mirror.bit.edu.cn/apache/thrift/0.9.1/thrift-0.9.1.tar.gz

#=======================================
# Step 2: Build and Install the Apache Thrift compiler
#=======================================

# 2.1 install tools
# http://thrift.apache.org/docs/install/ubuntu/
# for ubuntu setup
apt-get -y install libboost-dev libboost-test-dev libboost-program-options-dev libevent-dev automake libtool flex bison pkg-config g++ libssl-dev

# for language 

# for python
apt-get -y install python-dev python-twisted

# for csharp
#apt-get -y install mono-gmcs libmono-dev libmono-system-web2.0-cil
apt-get -y install mono-complete monodevelop

# 2.2 build thrift from source
tar -xzvf thrift-0.9.1.tar.gz
mv thrift-0.9.1 thrift
cd thrift

./configure --help

#--with-cpp              build the C++ library [default=yes]
#  --with-boost[=DIR]      use boost [default=yes]. Optionally specify the root
#                          prefix dir where boost is installed
#  --with-libevent[=DIR]   use libevent [default=yes]. Optionally specify the
#                          root prefix dir where libevent is installed
#  --with-zlib[=DIR]       use zlib (default is yes) - it is possible to
#                          specify an alternate root directory for zlib
#  --with-qt4              build the Qt library [default=yes]
#  --with-c_glib           build the C (GLib) library [default=yes]
#  --with-csharp           build the C# library [default=yes]
#  --with-java             build the Java library [default=yes]
#  --with-erlang           build the Erlang library [default=yes]
#  --with-python           build the Python library [default=yes]
#  --with-perl             build the Perl library [default=yes]
#  --with-php              build the PHP library [default=yes]
#  --with-php_extension    build the PHP_EXTENSION library [default=yes]
#  --with-ruby             build the Ruby library [default=yes]
#  --with-haskell          build the Haskell library [default=yes]
#  --with-go               build the Go library [default=yes]
#  --with-d                build the D library [default=yes]
#  --with-openssl=DIR      root of the OpenSSL directory


./configure --with-cpp=no --with-qt4=no --with-c_glib=no --with-java=no --with-erlang=no --with-perl=no --with-php=no --with-ruby=no --with-haskell=no --with-go=no --with-d=no --with-charp=yes --with-python=yes

#thrift 0.9.1
#
#Building C++ Library ......... : no
#Building C (GLib) Library .... : no
#Building Java Library ........ : no
#Building C# Library .......... : yes
#Building Python Library ...... : yes
#Building Ruby Library ........ : no
#Building Haskell Library ..... : no
#Building Perl Library ........ : no
#Building PHP Library ......... : no
#Building Erlang Library ...... : no
#Building Go Library .......... : no
#Building D Library ........... : no
#
#C# Library:
#   Using .NET 3.5 ............ : yes
#
#Python Library:
#   Using Python .............. : /usr/bin/python


make
#make check
make install
#make uninstall
#make clean

# 2.3 verify thrift compiler is successfully installed
thrift -version
#Thrift version 0.9.1

which thrift
#/usr/local/bin/thrift

#=======================================
# Step 3: Generate Hbase client bindings/library for target language(python)
#=======================================
# After the Thrift compiler is installed you will need to create a thrift file. This file is an interface definition made up of thrift types and Services. The services you define in this file are implemented by the server and are called by any clients. The Thrift compiler is used to generate your Thrift File into source code which is used by the different client libraries and the server you write. To generate the source from a thrift file run

#            thrift --gen <language> <Thrift filename>

# 
# 3.1 copy Hbase.thrift from $HBASE_HOME folder
cd ./offical/tar

cp /home/hduser/hbase/src/main/resources/org/apache/hadoop/hbase/thrift/Hbase.thrift .

# 3.2 generate hbase python library
thrift -gen py Hbase.thrift

# this will create a gen-py folder 
tree gen-py/
#gen-py/
#├── hbase
#│   ├── constants.py
#│   ├── Hbase.py
#│   ├── Hbase-remote
#│   ├── __init__.py
#│   └── ttypes.py
#└── __init__.py
#
#1 directory, 6 files

# 3.3 view thrift python client
tree thrift/lib/py/src/
#thrift/lib/py/src/
#├── __init__.py
#├── protocol
#│   ├── fastbinary.c
#│   ├── __init__.py
#│   ├── TBase.py
#│   ├── TBinaryProtocol.py
#│   ├── TCompactProtocol.py
#│   ├── TJSONProtocol.py
#│   └── TProtocol.py
#├── server
#│   ├── __init__.py
#│   ├── THttpServer.py
#│   ├── TNonblockingServer.py
#│   ├── TProcessPoolServer.py
#│   └── TServer.py
#├── Thrift.py
#├── transport
#│   ├── __init__.py
#│   ├── THttpClient.py
#│   ├── TSocket.py
#│   ├── TSSLSocket.py
#│   ├── TTransport.py
#│   ├── TTwisted.py
#│   └── TZlibTransport.py
#├── TSCons.py
#├── TSerialization.py
#└── TTornado.py
#
#3 directories, 24 files

# 3.4 copy thrift python library to dest project
cp -r thrift/lib/py/src/ gen-py/thrift/
ls -l gen-py/
#total 8
#drwxr-xr-x 2 root root 4096 Dec 16 00:53 hbase
#-rw-r--r-- 1 root root    0 Dec 16 00:32 __init__.py
#drwxr-xr-x 5 root root 4096 Dec 16 00:53 thrift

# 3.5 verify hbase and thrift python library
cd gen-py

python
#Python 2.7.3 (default, Sep 26 2013, 20:03:06) 
#[GCC 4.6.3] on linux2
#Type "help", "copyright", "credits" or "license" for more information.
>>> import thrift
>>> import hbase

